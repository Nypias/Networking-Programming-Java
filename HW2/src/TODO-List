1) Check bug of the following scenario
    a) Trader1 sells item
    b) Trader2 wishes and receives item
    c) Trader3 makes a wish (for the same item?)


2) Check when to remove wishes from list (if we have to)
3) If client crashes, we can not start another one with the same name







==============================================================================

Code for making GUI responive even on long running tasks

sellProduct.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {

                new SwingWorker<Integer, String>() {
                    //runs on a background thread.
                    protected Integer doInBackground() throws Exception {
                        Market marketObj;
                        try {
                            marketObj = (Market) Naming.lookup("rmi:/localhost:1099/" + "MyMarket");
                            Trader traderTheo = new TraderImpl("Theo12");
                            marketObj.register(traderTheo);
                            Item item1 = new Item("CAMERA", 600, traderTheo.getName());
                            marketObj.sell(traderTheo.getName(), item1);

                        } catch (MalformedURLException | RemoteException | NotBoundException e) {
                            e.printStackTrace();
                        }
                        return 1;
                    }

                    //runs on EDT, allowed to update gui
                    protected void process(String fileName) {
                        //receives the name of the file from publish() and sets it on the textfield.
                        // textField.setText("scanning file: " + fileName);
                    }

                    //runs on EDT, allowed to update gui
                    protected void done() {
                        try {
                            //textField.setText("UPDATE GUI");
                        } catch (Exception e) {
                            //this is where you handle any exceptions that occurred in the
                            //doInBackground() method
                        }
                    }
                }.execute();


                System.out.println("Sell clicked!");


                System.out.println("Sell clicked! after");
            }
        });